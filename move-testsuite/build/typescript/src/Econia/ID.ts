import * as $ from "@manahippo/move-to-ts";
import {AptosDataCache, AptosParserRepo} from "@manahippo/move-to-ts";
import {U8, U64, U128} from "@manahippo/move-to-ts";
import {u8, u64, u128} from "@manahippo/move-to-ts";
import {TypeParamDeclType, FieldDeclType} from "@manahippo/move-to-ts";
import {AtomicTypeTag, StructTag, TypeTag, VectorTag} from "@manahippo/move-to-ts";
import {HexString, AptosClient} from "aptos";
import * as Std from "../Std";
import * as CritBit from "./CritBit";
export const packageName = "Econia";
export const moduleAddress = new HexString("0xc0deb00c");
export const moduleName = "ID";

export const FIRST_64 : U8 = u8("64");
export const HI_64 : U64 = u64("18446744073709551615");

export function id_a$ (
  p: U64,
  v: U64,
  $c: AptosDataCache,
): U128 {
  return u128($.copy(p)).shl(FIRST_64).or(u128($.copy(v)));
}

// #[test]
export function id_a_success$ (
  $c: AptosDataCache,
): void {
  let p, r, v;
  [p, v] = [u64(CritBit.u$([u8("49"), u8("49"), u8("48"), u8("49")], $c)), u64(CritBit.u$([u8("49"), u8("48"), u8("49"), u8("48")], $c))];
  r = CritBit.u_long$([u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48")], [u8("49"), u8("49"), u8("48"), u8("49"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48")], [u8("48"), u8("48"), u8("48"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48")], $c);
  if (!id_a$($.copy(p), $.copy(v), $c).eq($.copy(r))) {
    throw $.abortCode(u64("0"));
  }
  return;
}

export function id_b$ (
  p: U64,
  v: U64,
  $c: AptosDataCache,
): U128 {
  return u128($.copy(p)).shl(FIRST_64).or(u128($.copy(v).xor(HI_64)));
}

// #[test]
export function id_b_success$ (
  $c: AptosDataCache,
): void {
  let p, r, v;
  [p, v] = [u64(CritBit.u$([u8("49"), u8("48"), u8("48"), u8("48")], $c)), u64(CritBit.u$([u8("49"), u8("48"), u8("49"), u8("48")], $c))];
  r = CritBit.u_long$([u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48")], [u8("49"), u8("48"), u8("48"), u8("48"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49")], [u8("49"), u8("49"), u8("49"), u8("49"), u8("48"), u8("49"), u8("48"), u8("49")], $c);
  if (!id_b$($.copy(p), $.copy(v), $c).eq($.copy(r))) {
    throw $.abortCode(u64("0"));
  }
  return;
}

export function price$ (
  id: U128,
  $c: AptosDataCache,
): U64 {
  return u64($.copy(id).shr(FIRST_64));
}

// #[test]
export function price_success$ (
  $c: AptosDataCache,
): void {
  let id;
  id = CritBit.u_long$([u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48")], [u8("49"), u8("48"), u8("49"), u8("48"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49")], [u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49")], $c);
  if (!price$($.copy(id), $c).eq(u64(CritBit.u$([u8("49"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48")], $c)))) {
    throw $.abortCode(u64("0"));
  }
  return;
}

export function unit_test_poison$ (
  $c: AptosDataCache,
): void {
  Std.UnitTest.create_signers_for_testing$(u64("0"), $c);
  return;
}

export function v_n_a$ (
  id: U128,
  $c: AptosDataCache,
): U64 {
  return u64($.copy(id).and(u128(HI_64)));
}

// #[test]
export function v_n_a_success$ (
  $c: AptosDataCache,
): void {
  let id;
  id = CritBit.u_long$([u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49")], [u8("49"), u8("49"), u8("49"), u8("49"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48"), u8("48")], [u8("49"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48")], $c);
  if (!v_n_a$($.copy(id), $c).eq(u64(CritBit.u$([u8("49"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48"), u8("49"), u8("48")], $c)))) {
    throw $.abortCode(u64("0"));
  }
  return;
}

export function v_n_b$ (
  id: U128,
  $c: AptosDataCache,
): U64 {
  return u64($.copy(id).and(u128(HI_64))).xor(HI_64);
}

// #[test]
export function v_n_b_success$ (
  $c: AptosDataCache,
): void {
  let id;
  id = CritBit.u_long$([u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49")], [u8("49"), u8("49"), u8("49"), u8("48"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49"), u8("49")], [u8("49"), u8("49"), u8("49"), u8("49"), u8("48"), u8("49"), u8("48"), u8("49")], $c);
  if (!v_n_b$($.copy(id), $c).eq(u64(CritBit.u$([u8("49"), u8("48"), u8("49"), u8("48")], $c)))) {
    throw $.abortCode(u64("0"));
  }
  return;
}

export function loadParsers(repo: AptosParserRepo) {
}

